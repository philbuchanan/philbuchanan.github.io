// # Sass variables
// ----------------------------------

$global-font-size:     16px;
$global-line-height:   24px;
$global-spacing-unit:  round($global-line-height);

$wrapper-width:        1484px;
$wrapper-width-narrow: 698px;

$font-size-h1:         40px;
$font-size-h2:         24px;
$font-size-h3:         19px;
$font-size-h4:         16px;
$font-size-tiny:       12px;

$color-blue:           #2c66ee;
$color-green:          #34e3bd;

$color-text:           #444;
$color-text-secondary: #767676;
$color-link:           $color-blue;
$color-grey-90:        #e5e5e5;

// Calculate baseline grid compatible fonts sizes.
@mixin font-size($font-size) {
	font-size: ($font-size / $global-font-size) * 1rem;
	line-height: ceil($font-size / $global-line-height) * ($global-line-height / $font-size);
}

// Calculate baseline grid compatible rem based values.
// Convert any px value into its rem equivalent.
@mixin rem($property, $value, $important: false) {
	@if ($important == true) {
		$important: !important;
	}
	@elseif ($important == false) {
		$important: null;
	}

	#{$property}: $value / $global-font-size * 1rem $important;
}

@mixin clearfix() {
	&:after {
		content: "" !important;
		display: block !important;
		clear: both !important;
	}
}



// # Reset
// ----------------------------------

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	border: 0;
	margin: 0;
	padding: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
header, footer, main, article, aside, details,
figcaption, figure, menu, nav, section {
	display: block;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: "";
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
html {
	box-sizing: border-box;
}
*, *:before, *:after {
	box-sizing: inherit;
}



// # Elements
// ----------------------------------

html {
	color: $color-text;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
	font-size: ($global-font-size / 16px) * 1em;
	line-height: $global-line-height / $global-font-size;
	font-weight: 400;
	-webkit-font-smoothing: antialiased;
	-webkit-text-size-adjust: 100%;
	    -ms-text-size-adjust: 100%;
}

body {
	@include rem(padding-top, $global-spacing-unit);
	@include rem(padding-bottom, $global-spacing-unit);
	@include rem(padding-left, ($global-spacing-unit / 2));

	&:after {
		content: " ";
		@include rem(width, ($global-spacing-unit / 2));
		position: fixed;
		top: 0;
		bottom: 0;
		left: 0;
		background: $color-blue;
		background: linear-gradient(to bottom, $color-green, $color-blue);
	}
}

@media screen and (min-width: $wrapper-width-narrow) {
	body {
		@include rem(padding-top, ($global-spacing-unit * 3));
		@include rem(padding-bottom, ($global-spacing-unit * 3));
		@include rem(padding-left, $global-spacing-unit);

		&:after {
			@include rem(width, $global-spacing-unit);
		}
	}
}

h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
ul, ol, dl,
figure,
hr {
	@include rem(margin-bottom, $global-spacing-unit);
}

h1 {
	@include font-size($font-size-h1);
	font-weight: bold;
}

h2 {
	@include font-size($font-size-h2);
	font-weight: bold;
}

h3 {
	@include font-size($font-size-h3);
	font-weight: bold;
}

h4 {
	@include font-size($font-size-h4);
	font-weight: bold;
}

ul,
ol {
	@include rem(margin-left, $global-spacing-unit);
}

ul ul,
ul ol,
ol ol,
ol ul {
	margin-bottom: 0;
}

strong {
	font-weight: 600;
}

em {
	font-style: italic;
}



// ## Images and media
// ----------------------------------

img {
	max-width: 100%;
	height: inherit;
	vertical-align: middle;
}

figcaption {
	@include font-size($font-size-tiny);
	font-style: italic;
}



// ## Links
// ----------------------------------

a {
	color: $color-link;
	text-decoration: none;
	outline: none;
	transition: 0.2s;

	&:focus {
		outline: thin dotted;
	}

	&:hover {
		text-decoration: underline;
	}
}



// # Objects
// ----------------------------------

.o-wrapper {
	@include clearfix();
	@include rem(padding-left, $global-spacing-unit);
	@include rem(padding-right, $global-spacing-unit);
	margin-left:  auto;
	margin-right: auto;
	max-width: $wrapper-width;
}

.o-wrapper--narrow {
	max-width: $wrapper-width-narrow;
}

.o-island {
	@include rem(margin-bottom, ($global-spacing-unit * 2));
}

.o-list-bare {
	list-style: none;
	margin-left: 0;
}

.o-list-inline {
	list-style: none;
	margin-left: 0;
}

.o-list-inline__item {
	display: inline-block;
}

@media screen and (min-width: $wrapper-width-narrow) {
	.o-island {
		@include rem(margin-bottom, ($global-spacing-unit * 3));
	}
}



// # Components
// ----------------------------------

.c-header {
	border-bottom: 1px solid $color-grey-90;
}

.c-footer {
	border-top: 1px solid $color-grey-90;
}

.c-nav {
	@include rem(padding-top, $global-spacing-unit);
}

.c-nav__item {
	@include rem(margin-right, $global-spacing-unit);
}



// # Utilities
// ----------------------------------

.u-screen-reader-text {
	clip: rect(1px, 1px, 1px, 1px);
	position: absolute;
	width: 1px;
	height: 1px;
	overflow: hidden;
}

.u-tiny-text {
	color: $color-text-secondary;
	@include font-size($font-size-tiny);
}

.u-clearfix {
	@include clearfix();
}

.u-align-none {
	display: inline-block !important;
	@include rem(margin-bottom, $global-spacing-unit, true);
}

.u-margin-bottom-none {
	margin-bottom: 0 !important;
}

.u-pull-left {
	float: left !important;
}

.u-pull-right {
	float: right !important;
}

.u-1of2 {
	width: 50% !important;
}

.u-align-right {
	float: right;
	margin-left: 24px;
}
