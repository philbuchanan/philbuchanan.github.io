<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
	<channel>
		<title>Phil Buchanan</title>
		<link>http://philbuchanan.com</link>
		<description>Phil Buchanan is the Manager, Product Design at EventMobi. He is also an instructor in the Department of Design at York University. Toronto, Canada.</description>
			<item>
				<title>Unleash Your Style Guide with Rapid Prototyping</title>
				<link>http://philbuchanan.com/posts/unleash-your-style-guide-with-rapid-prototyping/</link>
				<guid isPermaLink="false">posts/unleash-your-style-guide-with-rapid-prototyping</guid>
				<pubDate>Wed, 30 Nov 2016 09:31:00 EST</pubDate>
				<description>
					&lt;p&gt;Prototyping is one of the most important aspects of a designer’s role. Prototypes allow us to make quick decisions about our products without having to spend time or money on the expensive process of building real things. Higher fidelity prototypes allow us to have greater confidence in the design decisions we make, but typically require a larger time investment to create. As designers, we are forever performing a balancing act between the amount of time required to create a prototype and the level of confidence that prototype gives us in the decisions we are making.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;html-prototypes&quot;&gt;HTML Prototypes&lt;/h2&gt;
&lt;p&gt;At the high-fidelity level of prototypes (the far right side of the graph above) lives native HTML and CSS. Working directly with HTML and CSS allows us to work in the final medium earlier in the design process, which ultimately gives us more confidence in our designs. The trade-off is the larger time investment required to develop such a prototype.&lt;/p&gt;
&lt;p&gt;At EventMobi, we have built a tool that allows us to create prototypes that provide us confidence in our decisions, while keeping the effort low. Powered by &lt;a href&#x3D;&quot;http://philbuchanan.com/posts/take-ownership-of-your-design-with-living-style-guides/&quot;&gt;our style guide&lt;/a&gt;, we have a full-fidelity, feature complete, clickable HTML prototype. We have merged the concept of a style guide and a prototype into a single, unified product for all design exploration to take place. As the prototype evolves, so too does the style guide, because they rely on each other. Our prototype offers a huge number of advantages over other prototyping methods.&lt;/p&gt;
&lt;h3 id&#x3D;&quot;the-source-of-truth-for-our-product&quot;&gt;The Source of Truth for Our Product&lt;/h3&gt;
&lt;p&gt;First and foremost, our prototype acts as the source of truth for the future vision of our product. Designers, developers, product managers, other business units and key stakeholders reference it on a daily basis. It replaces the need for detailed specification documents or lengthy conversations about intentions. Plus, by working directly in the browser, we are able to present work in the final medium much sooner in the process.&lt;/p&gt;
&lt;h3 id&#x3D;&quot;speed-and-confidence&quot;&gt;Speed and Confidence&lt;/h3&gt;
&lt;p&gt;Perhaps one of the biggest advantages of our approach is the speed at which we can gain high levels of confidence in our decisions. The prototype allows us to quickly experiment with various combinations of components to see what works and what doesn’t. It’s like building a house out of Lego — if one brick doesn’t fit, you can easily replace it with another.&lt;/p&gt;
&lt;p&gt;Traditional prototyping methods (think paper prototypes or InVision) often make even minor changes, like item ordering or copy edits, time consuming. In our living prototype, we can build entirely new interfaces and product flows — that &lt;em&gt;look and feel&lt;/em&gt; real — in minutes. This allows us to iterate more often and gives us a very high level of confidence in the decisions we make.&lt;/p&gt;
&lt;h3 id&#x3D;&quot;consistency&quot;&gt;Consistency&lt;/h3&gt;
&lt;p&gt;Working quickly often introduces inconsistencies with existing components and patterns in the style guide. When working in Sketch or Photoshop it’s easy to be lackadaisical about inconsistencies, which in turn, lowers the effectiveness of our tests.&lt;/p&gt;
&lt;p&gt;We believe firmly in ensuring consistency across the product. By combining our style guide with our prototype, we are able to create both the parts and the whole of a UI design system concurrently. This results in greater consistency across the product and removes a lot of the interpretation of components and their intended usage. We have real examples of every component in use.&lt;/p&gt;
&lt;p&gt;Designers can quickly and easily see the impact that a change to an existing component might have across the entire product. It allows us to be more diligent and critical of changes, especially those impacting many patterns.&lt;/p&gt;
&lt;h3 id&#x3D;&quot;advantages-for-user-testing&quot;&gt;Advantages for User Testing&lt;/h3&gt;
&lt;p&gt;By including every page of our real product in the HTML prototype, it allows our user testing participants to explore more deeply during tests, offering us greater insight into what they are thinking and how they are approaching the problem. Designers can see how users would interact with their interfaces within the context of the entire product. These types of insights would not be possible with a typical, more limited-scope prototype where only certain user flows are anticipated and designed for.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;things-to-consider&quot;&gt;Things to Consider&lt;/h2&gt;
&lt;p&gt;A few things have allowed our prototype to be successful. First of all, we started with a new project. Every component and interface was &lt;em&gt;first&lt;/em&gt; created in the prototype, then moved to production. You can read more about how we manage that process in our post about &lt;a href&#x3D;&quot;http://philbuchanan.com/posts/take-ownership-of-your-design-with-living-style-guides/&quot;&gt;living style guides&lt;/a&gt;. If you are working on a mature project, there is probably little value in rebuilding every interface of your existing product in prototype form. That would be working backwards. However, if you are looking to implement something like this in your own product, net-new features might be a great place to start.&lt;/p&gt;
&lt;p&gt;We also have a relatively small design team (three at the time of writing). The small number of people contributing makes it easier to manage. I assume the administrative role, but the entire team has ownership, equal opportunity to contribute and responsibility to ensure consistency.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;faster-outcomes&quot;&gt;Faster Outcomes&lt;/h2&gt;
&lt;p&gt;Ultimately, as designers, the sooner we are able to see the work in the final medium, the more confident we can be about our product. By working directly in the browser, we bypass a number of steps and expedite our design process. This allows us to make confident decisions, faster.&lt;/p&gt;

				</description>
			</item>
			<item>
				<title>Take Ownership of Your Design with Living Style Guides</title>
				<link>http://philbuchanan.com/posts/take-ownership-of-your-design-with-living-style-guides/</link>
				<guid isPermaLink="false">posts/take-ownership-of-your-design-with-living-style-guides</guid>
				<pubDate>Mon, 24 Oct 2016 09:11:00 EDT</pubDate>
				<description>
					&lt;p&gt;Lots has been written about the &lt;a href&#x3D;&quot;http://atomicdesign.bradfrost.com/chapter-1/&quot;&gt;value of style guides&lt;/a&gt;. I’ll assume you’ve read the whys and wherefores, so I’ll spare you the pitch. What I will tell you, is that at EventMobi, we’ve noticed significant improvements as a result of having a well defined style guide. Most notably: improved designer-to-developer communications.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;improved-designer-to-developer-communications&quot;&gt;Improved Designer-to-Developer Communications&lt;/h2&gt;
&lt;p&gt;In recent years, designers and developers have been flooded with tools to improve cross-functional communication. These tools attempt to take a lot of the manual work out of creating detailed, annotated design documents — the standard approach for delivering designs to developers. For example, &lt;a href&#x3D;&quot;https://support.invisionapp.com/hc/en-us/articles/207950906-Introduction-to-Inspect&quot;&gt;InVision’s Inspect&lt;/a&gt; promises to help deliver pixel-perfect measurements and details to developers. It even generates CSS for you!&lt;/p&gt;
&lt;p&gt;Although these tools often promise the world, they frequently fall short in these two areas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Focus entirely on making the designer’s job easier without any regard for the workload of the developer.&lt;/li&gt;
&lt;li&gt;Assume products are created as one-off pages, rather than being built from a series of reusable components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id&#x3D;&quot;shifting-responsibilities&quot;&gt;Shifting Responsibilities&lt;/h2&gt;
&lt;p&gt;We’ve gradually observed a shift in the developer’s role–from being solely focused on either frontend or backend development to a more versatile full-stack role–allowing them to handle both sides of development.&lt;/p&gt;
&lt;p&gt;Avoiding the constant twisting and tweaking of frontend code to fit the backend is the main benefit of having full-stack developers. Instead, the frontend and backend are developed in tandem and now complement each other. This has moved the line of responsibilities, and has expanded what is expected of a single developer.&lt;/p&gt;
&lt;p&gt;The challenge is that many full-stack developers are self-declared amateurs when it comes to CSS. In an effort to ease some of their responsibilities, at EventMobi we encourage our designers to take full ownership of CSS. This ensures that the people whose day-to-day work is directly affected by CSS are the same people invested in CSS best practices.&lt;/p&gt;
&lt;p&gt;Designers’ ownership of CSS gives us a number of additional advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is no design hand-off. This eliminates a lot of wasted communication and lost productivity.&lt;/li&gt;
&lt;li&gt;Designers have full control of every pixel in the final product. They can make adjustments without any developer involvement.&lt;/li&gt;
&lt;li&gt;Since our designers must now think in terms of components, this helps reinforce our process and aids in communication with developers who are already building products with components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id&#x3D;&quot;building-products-like-lego&quot;&gt;Building Products Like Lego&lt;/h2&gt;
&lt;p&gt;Our style guide is built using the &lt;a href&#x3D;&quot;http://atomicdesign.bradfrost.com/chapter-2/&quot;&gt;principles of atomic design&lt;/a&gt;. Instead of designing individual pages, our designers work with smaller pieces of UI referred to as components. You can think of components as individual Lego blocks, each one reusable and designed for a specific task. These components can be combined in various combinations to create an infinite number of pages. Components allow our designers to discuss a design in terms of the building blocks used.&lt;/p&gt;
&lt;p&gt;As a result, our designer-developer conversations are more focused on product and the value it’s delivering to customers, rather than the time-consuming discussions around intended padding or font sizes.&lt;/p&gt;
&lt;p&gt;By placing ownership of CSS with designers we ensure consistency of the components that are used during the design phase. Plus, developers no longer have to interpret a designer’s intent.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;flipping-style-guide-ownership&quot;&gt;Flipping Style Guide Ownership&lt;/h2&gt;
&lt;p&gt;A style guide’s relevance is directly proportional to the amount of attention it receives. A guide in disrepair quickly becomes a neglected guide. Neglect leads to a feeling of indifference, allowing exceptions to be introduced without receiving the scrutiny they require to keep the style guide useful. In such cases, a style guide may even be abandoned completely.&lt;/p&gt;
&lt;p&gt;In the early days of style guides you might have maintained two separate sets of CSS code: one for production and a second for the style guide. Syncing the two was a nightmare. As the need for style guides became more apparent and accepted, tools emerged to help manage the process and even &lt;a href&#x3D;&quot;http://warpspire.com/kss/&quot;&gt;automatically generate style guides&lt;/a&gt; from production code. With this approach, developers own the style guide, which is the opposite of what we actually want.&lt;/p&gt;
&lt;p&gt;Our solution is to flip the ownership. Our style guide code becomes our production code. The CSS written for our style guide is published to a private &lt;a href&#x3D;&quot;https://www.npmjs.com/&quot;&gt;NPM package&lt;/a&gt; and included as a dependency in our development environments. This completely eliminates duplicated work and it properly aligns the ownership of elements. Designers own the patterns. Developers own the functionality. In order for a change or new component to make it to production, our designers must update the style guide.&lt;/p&gt;
&lt;p&gt;It also has the added benefit of allowing us to reuse the patterns in multiple projects. For example, our internal tools team uses the same set of components and styles for some of our developer tools because it is easy for them to simply include the NPM package as a dependency. It’s a win-win for everyone involved.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;ownership-and-maintenance&quot;&gt;Ownership and Maintenance&lt;/h2&gt;
&lt;p&gt;Style guides offer design teams numerous advantages like consistency and cohesion. To thrive, though, dedicated resources are required. By adjusting how we approach style guides, we can lessen the maintenance workload and get maximum value from style guides in the designer-to-developer handoff.&lt;/p&gt;

				</description>
			</item>
			<item>
				<title>Separate, But Together: Design at EventMobi</title>
				<link>http://philbuchanan.com/posts/separate-but-together-design-at-eventmobi/</link>
				<guid isPermaLink="false">posts/separate-but-together-design-at-eventmobi</guid>
				<pubDate>Mon, 22 Aug 2016 08:58:00 EDT</pubDate>
				<description>
					&lt;p&gt;&lt;em&gt;3 product designers. 25 developers. Helping thousands of event planners run better live events for millions of attendees around the world.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you can imagine, being one of three product designers supporting a team of 25 developers who are building event technology to support thousands of event planners sometimes presents a bit of a resourcing challenge.&lt;/p&gt;
&lt;p&gt;So how do we overcome time and resource constraints with a lean team?&lt;/p&gt;
&lt;p&gt;Sprints. Planning meetings. Stand-ups and retrospectives. By incorporating these standard Agile practices that our developers already employ, we’ve turned a small team into a mighty team.&lt;/p&gt;
&lt;p&gt;Here’s how.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;great-design-doesn-t-happen-in-a-vacuum-&quot;&gt;Great Design Doesn’t Happen in a Vacuum.&lt;/h2&gt;
&lt;p&gt;Our designers are embedded directly into our product teams, which also consist of &lt;a href&#x3D;&quot;https://medium.com/eventmobi/quality-without-qa-how-eventmobi-keeps-the-bar-high-81a6446e6dae#.od1pm2d9u&quot;&gt;product managers and full-stack engineers&lt;/a&gt;. While being dispersed in different teams can create a feeling of isolation from other designers, we all know &lt;em&gt;great design cannot happen in a vacuum&lt;/em&gt;. So while we may be physically separated from each other, the design team functions as a unit, sharing support and resources whenever possible.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;dedicated-design-resources&quot;&gt;Dedicated Design Resources&lt;/h2&gt;
&lt;p&gt;Our product teams are completely autonomous. The teams are responsible for all stages of the product development process. The teams decide what to build and when to build it, giving product managers, developers and designers more ownership of their work.&lt;/p&gt;
&lt;p&gt;By embedding the designers within these teams, we dedicate design resources to projects that the team deems most important. Each designer is responsible for their individual project timelines based on their team’s roadmaps.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;early-planning-with-design-sprints&quot;&gt;Early Planning with Design Sprints&lt;/h2&gt;
&lt;p&gt;Aligned with our developer’s workflow, designers operate in 1-week design sprints. We run a weekly sprint planning meeting every Monday to plan our week and set objectives and deliverables. This meeting is key to ensuring that each designer has clear goals for the week and stays on track.&lt;/p&gt;
&lt;p&gt;We time-box each step of our process. Our planning meetings give us the opportunity to collectively discuss the process requirements before the project has begun. Weekly sprints allow for rapid iteration cycles. The ultimate goal is to move a ticket through the entire process within the one-week sprint. Progress is tracked via a JIRA board:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Researching&lt;/li&gt;
&lt;li&gt;Sketching/Prototyping&lt;/li&gt;
&lt;li&gt;Testing/Learning&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Instead of spending weeks researching and collecting as much information about a problem as possible, we limit this step in the process to 1–2 days.&lt;/p&gt;
&lt;p&gt;Whatever the designer can learn about the problem in that time is applied to a prototype and validated with users. If our assumptions were wrong, we roll the new learning into the next sprint and iterate (time-permitting). This keeps us agile.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;delivering-designs-just-in-time&quot;&gt;Delivering Designs Just in Time&lt;/h2&gt;
&lt;p&gt;By following a similar sprint structure to our developers we are able to align our deliverables with their roadmap. We try to work 2–3 sprints ahead of developers, which allows us to take the time we need to thoroughly explore each step in our process. That said, if we work too much further ahead, we find ourselves revisiting the designs before development begins anyway.&lt;/p&gt;
&lt;p&gt;Because this can be a huge waste of resources for a small design team, it’s imperative for us to carefully plan our process so we are delivering detailed, validated designs to our developers just in time.&lt;/p&gt;
&lt;p&gt;To stay on track and solicit feedback in a timely manner, we use 1 daily meeting and 2 weekly meetings as our main touch points.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;design-stand-ups-cultivate-collaboration&quot;&gt;Design Stand-Ups Cultivate Collaboration&lt;/h2&gt;
&lt;p&gt;It may seem obvious, but the best technique we employ to combat working scattered throughout the office is getting together often. We foster a highly collaborative work environment where we encourage designers to sit together to work through problems in person.&lt;/p&gt;
&lt;p&gt;It can be disruptive at times, but we feel the pros far outweigh the cons. Several times a day I send and receive Slack messages asking for a quick critique. I’ve never been turned away.&lt;/p&gt;
&lt;p&gt;In addition to those informal meetings, every morning we hold a 30-minute daily design stand-up. This helps us start our days off on the right track. The focus of the meeting is two-fold: early critique and process/timeline alignment. If a design discussion runs long we know we need to schedule a longer meeting where we can dive deeper into the problem or adjust the schedule for the particular project. Daily meetings mean decisions happen faster and less time is wasted on a designer’s internal conflict over how to move forward.&lt;/p&gt;
&lt;p&gt;These meetings also serve as a way to pool design resources. While our style guide (more on that in a future post) helps ensure we aren’t reinventing the wheel with every component or pattern, there are still instances in which designers need something new. Early discussion helps identify these instances and ensures we are considering all the possible use cases across our products, which ultimately saves time and effort by not having to refactor later.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;gathering-early-feedback-is-imperative&quot;&gt;Gathering Early Feedback is Imperative&lt;/h2&gt;
&lt;p&gt;With a small team, you can’t afford to spend a few days heading in the wrong direction. So, gathering early feedback is imperative.&lt;/p&gt;
&lt;p&gt;With that in mind, we run a weekly design critique meeting on Friday afternoons that involves the larger product team, including designers, product managers and the CTO.&lt;/p&gt;
&lt;p&gt;During these meetings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All participants gain a shared and deeper understanding of the problem,&lt;/li&gt;
&lt;li&gt;Designers share their research and learning from user testing sessions,&lt;/li&gt;
&lt;li&gt;The product team collectively provides feedback.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The meetings happen at the end of our design sprints so we can incorporate feedback immediately in our next sprint.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;aligning-design-with-development&quot;&gt;Aligning Design with Development&lt;/h2&gt;
&lt;p&gt;On a weekly basis, each product team runs a Show and Tell. During these meetings, all team members share what they are working on and provide valuable feedback to each other. For the designers, it’s a chance to show early iterations of a design.&lt;/p&gt;
&lt;p&gt;This helps align design with development, by making sure that design is technically feasible within the project timeline. It also allows the developers to be more involved in the design process and encourages a real ownership mentality towards the product.&lt;/p&gt;
&lt;h2 id&#x3D;&quot;constantly-evolving&quot;&gt;Constantly Evolving&lt;/h2&gt;
&lt;p&gt;This is only the beginning for us as we look for more ways to improve our process and deliver the best products we can with limited resources.&lt;/p&gt;
&lt;p&gt;Co-opting Agile practices for our own design needs has proven to be a huge success for our small team. Without our design sprint planning meetings and stand-ups, we wouldn’t be able to accomplish half of what we do. We will continue to run design retrospectives and look for further ways to improve and deliver more value out of our small (but mighty!) team.&lt;/p&gt;

				</description>
			</item>
	</channel>
</rss>
